 /******************************************************************************
 *    This program is free software: you can redistribute it and/or modify     *
 *   it under the terms of the GNU General Public License as published by      *
 *   the Free Software Foundation, either version 3 of the License, or         *
 *   (at your option) any later version.                                       *
 *                                                                             *
 *   This program is distributed in the hope that it will be useful,           *
 *   but WITHOUT ANY WARRANTY; without even the implied warranty of            *
 *   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the             *
 *   GNU General Public License for more details.                              *
 *                                                                             *
 *   You should have received a copy of the GNU General Public License         *
 *   along with this program.  If not, see <http://www.gnu.org/licenses/>.     *
 *                                                                             *   
 *   Authors:                                                                  *
 *      Carlos Arguelles (University of Wisconsin Madison)                     * 
 *         carguelles@icecube.wisc.edu                                         *
 *      Jordi Salvado (University of Wisconsin Madison)                        *
 *         jsalvado@icecube.wisc.edu                                           *
 *      Christopher Weaver (University of Wisconsin Madison)                   * 
 *         cweaver@icecube.wisc.edu                                            *
 ******************************************************************************/
(suv_rot) . components[0]+=suv.components[0];
(suv_rot) . components[1]+=cos(th)*suv.components[1] - sin(th)*(cos(del)*suv.components[15] + sin(del)*suv.components[57]);
(suv_rot) . components[2]+=cos(th)*suv.components[2] - sin(th)*(cos(del)*suv.components[23] + sin(del)*suv.components[58]);
(suv_rot) . components[3]+=cos(th)*suv.components[3] - sin(th)*(cos(del)*suv.components[31] + sin(del)*suv.components[59]);
(suv_rot) . components[4]+=cos(th)*suv.components[4] - sin(th)*(cos(del)*suv.components[39] + sin(del)*suv.components[60]);
(suv_rot) . components[5]+=cos(th)*suv.components[5] - sin(th)*(cos(del)*suv.components[47] + sin(del)*suv.components[61]);
(suv_rot) . components[6]+=cos(th)*suv.components[6] - sin(th)*(cos(del)*suv.components[55] + sin(del)*suv.components[62]);
(suv_rot) . components[7]+=(cos(th)*cos(th) - cos(2*del)*sin(th)*sin(th))*suv.components[7] - sin(2*del)*sin(th)*sin(th)*suv.components[56] + (cos(del)*sin(2*th)*(210*suv.components[9] + 70*sqrt(3)*suv.components[18] + 35*sqrt(6)*suv.components[27] + 21*sqrt(10)*suv.components[36] + 14*sqrt(15)*suv.components[45] + 10*sqrt(21)*suv.components[54] + 120*sqrt(7)*suv.components[63]))/420.;
(suv_rot) . components[8]+=cos(th)*suv.components[8] + sin(th)*(-(sin(del)*suv.components[15]) + cos(del)*suv.components[57]);
(suv_rot) . components[9]+=-(cos(del)*cos(th)*sin(th)*suv.components[7]) + ((3 + cos(2*th))*suv.components[9])/4. - cos(th)*sin(del)*sin(th)*suv.components[56] - (sin(th)*sin(th)*(70*sqrt(3)*suv.components[18] + 35*sqrt(6)*suv.components[27] + 21*sqrt(10)*suv.components[36] + 14*sqrt(15)*suv.components[45] + 10*sqrt(21)*suv.components[54] + 120*sqrt(7)*suv.components[63]))/420.;
(suv_rot) . components[10]+=suv.components[10];
(suv_rot) . components[11]+=suv.components[11];
(suv_rot) . components[12]+=suv.components[12];
(suv_rot) . components[13]+=suv.components[13];
(suv_rot) . components[14]+=suv.components[14];
(suv_rot) . components[15]+=cos(del)*sin(th)*suv.components[1] + sin(del)*sin(th)*suv.components[8] + cos(th)*suv.components[15];
(suv_rot) . components[16]+=cos(th)*suv.components[16] + sin(th)*(-(sin(del)*suv.components[23]) + cos(del)*suv.components[58]);
(suv_rot) . components[17]+=suv.components[17];
(suv_rot) . components[18]+=(35*(11 + cos(2*th))*suv.components[18] - 70*sqrt(3)*sin(2*th)*(cos(del)*suv.components[7] + sin(del)*suv.components[56]) - sin(th)*sin(th)*(70*sqrt(3)*suv.components[9] + 35*sqrt(2)*suv.components[27] + 7*sqrt(30)*suv.components[36] + 14*sqrt(5)*suv.components[45] + 10*sqrt(7)*(suv.components[54] + 4*sqrt(3)*suv.components[63])))/420.;
(suv_rot) . components[19]+=suv.components[19];
(suv_rot) . components[20]+=suv.components[20];
(suv_rot) . components[21]+=suv.components[21];
(suv_rot) . components[22]+=suv.components[22];
(suv_rot) . components[23]+=cos(del)*sin(th)*suv.components[2] + sin(del)*sin(th)*suv.components[16] + cos(th)*suv.components[23];
(suv_rot) . components[24]+=cos(th)*suv.components[24] + sin(th)*(-(sin(del)*suv.components[31]) + cos(del)*suv.components[59]);
(suv_rot) . components[25]+=suv.components[25];
(suv_rot) . components[26]+=suv.components[26];
(suv_rot) . components[27]+=(35*(23 + cos(2*th))*suv.components[27] - 70*sqrt(6)*sin(2*th)*(cos(del)*suv.components[7] + sin(del)*suv.components[56]) - 2*sin(th)*sin(th)*(35*sqrt(6)*suv.components[9] + 35*sqrt(2)*suv.components[18] + 7*sqrt(15)*suv.components[36] + 7*sqrt(10)*suv.components[45] + 5*sqrt(14)*(suv.components[54] + 4*sqrt(3)*suv.components[63])))/840.;
(suv_rot) . components[28]+=suv.components[28];
(suv_rot) . components[29]+=suv.components[29];
(suv_rot) . components[30]+=suv.components[30];
(suv_rot) . components[31]+=cos(del)*sin(th)*suv.components[3] + sin(del)*sin(th)*suv.components[24] + cos(th)*suv.components[31];
(suv_rot) . components[32]+=cos(th)*suv.components[32] + sin(th)*(-(sin(del)*suv.components[39]) + cos(del)*suv.components[60]);
(suv_rot) . components[33]+=suv.components[33];
(suv_rot) . components[34]+=suv.components[34];
(suv_rot) . components[35]+=suv.components[35];
(suv_rot) . components[36]+=(-42*sqrt(10)*cos(del)*sin(2*th)*suv.components[7] + 21*(39 + cos(2*th))*suv.components[36] - 84*sqrt(10)*cos(th)*sin(del)*sin(th)*suv.components[56] - 2*sin(th)*sin(th)*(21*sqrt(10)*suv.components[9] + 7*sqrt(30)*suv.components[18] + 7*sqrt(15)*suv.components[27] + 7*sqrt(6)*suv.components[45] + sqrt(210)*suv.components[54] + 12*sqrt(70)*suv.components[63]))/840.;
(suv_rot) . components[37]+=suv.components[37];
(suv_rot) . components[38]+=suv.components[38];
(suv_rot) . components[39]+=cos(del)*sin(th)*suv.components[4] + sin(del)*sin(th)*suv.components[32] + cos(th)*suv.components[39];
(suv_rot) . components[40]+=cos(th)*suv.components[40] + sin(th)*(-(sin(del)*suv.components[47]) + cos(del)*suv.components[61]);
(suv_rot) . components[41]+=suv.components[41];
(suv_rot) . components[42]+=suv.components[42];
(suv_rot) . components[43]+=suv.components[43];
(suv_rot) . components[44]+=suv.components[44];
(suv_rot) . components[45]+=(7*(59 + cos(2*th))*suv.components[45] - 14*sqrt(15)*sin(2*th)*(cos(del)*suv.components[7] + sin(del)*suv.components[56]) - sin(th)*sin(th)*(14*sqrt(15)*suv.components[9] + 14*sqrt(5)*suv.components[18] + 7*sqrt(10)*suv.components[27] + 7*sqrt(6)*suv.components[36] + 2*sqrt(35)*(suv.components[54] + 4*sqrt(3)*suv.components[63])))/420.;
(suv_rot) . components[46]+=suv.components[46];
(suv_rot) . components[47]+=cos(del)*sin(th)*suv.components[5] + sin(del)*sin(th)*suv.components[40] + cos(th)*suv.components[47];
(suv_rot) . components[48]+=cos(th)*suv.components[48] + sin(th)*(-(sin(del)*suv.components[55]) + cos(del)*suv.components[62]);
(suv_rot) . components[49]+=suv.components[49];
(suv_rot) . components[50]+=suv.components[50];
(suv_rot) . components[51]+=suv.components[51];
(suv_rot) . components[52]+=suv.components[52];
(suv_rot) . components[53]+=suv.components[53];
(suv_rot) . components[54]+=(5*(83 + cos(2*th))*suv.components[54] - 10*sqrt(21)*sin(2*th)*(cos(del)*suv.components[7] + sin(del)*suv.components[56]) - sin(th)*sin(th)*(10*sqrt(21)*suv.components[9] + 10*sqrt(7)*suv.components[18] + 5*sqrt(14)*suv.components[27] + sqrt(210)*suv.components[36] + 2*sqrt(35)*suv.components[45] + 40*sqrt(3)*suv.components[63]))/420.;
(suv_rot) . components[55]+=cos(del)*sin(th)*suv.components[6] + sin(del)*sin(th)*suv.components[48] + cos(th)*suv.components[55];
(suv_rot) . components[56]+=-2*cos(del)*sin(del)*sin(th)*sin(th)*suv.components[7] + (cos(del)*cos(del) + cos(2*th)*sin(del)*sin(del))*suv.components[56] + (sin(del)*sin(2*th)*(210*suv.components[9] + 70*sqrt(3)*suv.components[18] + 35*sqrt(6)*suv.components[27] + 21*sqrt(10)*suv.components[36] + 14*sqrt(15)*suv.components[45] + 10*sqrt(21)*suv.components[54] + 120*sqrt(7)*suv.components[63]))/420.;
(suv_rot) . components[57]+=sin(del)*sin(th)*suv.components[1] - cos(del)*sin(th)*suv.components[8] + cos(th)*suv.components[57];
(suv_rot) . components[58]+=sin(del)*sin(th)*suv.components[2] - cos(del)*sin(th)*suv.components[16] + cos(th)*suv.components[58];
(suv_rot) . components[59]+=sin(del)*sin(th)*suv.components[3] - cos(del)*sin(th)*suv.components[24] + cos(th)*suv.components[59];
(suv_rot) . components[60]+=sin(del)*sin(th)*suv.components[4] - cos(del)*sin(th)*suv.components[32] + cos(th)*suv.components[60];
(suv_rot) . components[61]+=sin(del)*sin(th)*suv.components[5] - cos(del)*sin(th)*suv.components[40] + cos(th)*suv.components[61];
(suv_rot) . components[62]+=sin(del)*sin(th)*suv.components[6] - cos(del)*sin(th)*suv.components[48] + cos(th)*suv.components[62];
(suv_rot) . components[63]+=-0.009523809523809525*(sin(th)*sin(th)*(30*sqrt(7)*suv.components[9] + 10*sqrt(21)*suv.components[18] + 5*sqrt(42)*suv.components[27] + 3*sqrt(70)*suv.components[36] + 2*sqrt(105)*suv.components[45] + 10*sqrt(3)*suv.components[54])) - (2*sin(2*th)*(cos(del)*suv.components[7] + sin(del)*suv.components[56]))/sqrt(7) + ((3 + 4*cos(2*th))*suv.components[63])/7.;