 /******************************************************************************
 *    This program is free software: you can redistribute it and/or modify     *
 *   it under the terms of the GNU General Public License as published by      *
 *   the Free Software Foundation, either version 3 of the License, or         *
 *   (at your option) any later version.                                       *
 *                                                                             *
 *   This program is distributed in the hope that it will be useful,           *
 *   but WITHOUT ANY WARRANTY; without even the implied warranty of            *
 *   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the             *
 *   GNU General Public License for more details.                              *
 *                                                                             *
 *   You should have received a copy of the GNU General Public License         *
 *   along with this program.  If not, see <http://www.gnu.org/licenses/>.     *
 *                                                                             *   
 *   Authors:                                                                  *
 *      Carlos Arguelles (University of Wisconsin Madison)                     * 
 *         carguelles@icecube.wisc.edu                                         *
 *      Jordi Salvado (University of Wisconsin Madison)                        *
 *         jsalvado@icecube.wisc.edu                                           *
 *      Christopher Weaver (University of Wisconsin Madison)                   * 
 *         cweaver@icecube.wisc.edu                                            *
 ******************************************************************************/
(suv_rot) . components[0]+=suv.components[0];
(suv_rot) . components[1]+=cos(th)*suv.components[1] - sin(th)*(cos(del)*suv.components[12] + sin(del)*suv.components[33]);
(suv_rot) . components[2]+=cos(th)*suv.components[2] - sin(th)*(cos(del)*suv.components[20] + sin(del)*suv.components[34]);
(suv_rot) . components[3]+=cos(th)*suv.components[3] - sin(th)*(cos(del)*suv.components[28] + sin(del)*suv.components[35]);
(suv_rot) . components[4]+=(cos(th)*cos(th) - cos(2*del)*sin(th)*sin(th))*suv.components[4] + (cos(del)*sin(th)*(-12*sin(del)*sin(th)*suv.components[32] + cos(th)*(6*suv.components[9] + 2*sqrt(3)*suv.components[18] + sqrt(6)*suv.components[27] + 3*sqrt(10)*suv.components[36])))/6.;
(suv_rot) . components[5]+=cos(th)*suv.components[5] + sin(th)*(-(cos(del)*suv.components[37]) + sin(del)*suv.components[44]);
(suv_rot) . components[6]+=cos(th)*suv.components[6] + sin(th)*(-(cos(del)*suv.components[38]) + sin(del)*suv.components[52]);
(suv_rot) . components[7]+=cos(th)*suv.components[7] + sin(th)*(-(cos(del)*suv.components[39]) + sin(del)*suv.components[60]);
(suv_rot) . components[8]+=cos(th)*suv.components[8] + sin(th)*(-(sin(del)*suv.components[12]) + cos(del)*suv.components[33]);
(suv_rot) . components[9]+=(3*(3 + cos(2*th))*suv.components[9] - 6*sin(2*th)*(cos(del)*suv.components[4] + sin(del)*suv.components[32]) - sin(th)*sin(th)*(2*sqrt(3)*suv.components[18] + sqrt(6)*suv.components[27] + 3*sqrt(10)*suv.components[36]))/12.;
(suv_rot) . components[10]+=suv.components[10];
(suv_rot) . components[11]+=suv.components[11];
(suv_rot) . components[12]+=cos(del)*sin(th)*suv.components[1] + sin(del)*sin(th)*suv.components[8] + cos(th)*suv.components[12];
(suv_rot) . components[13]+=suv.components[13];
(suv_rot) . components[14]+=suv.components[14];
(suv_rot) . components[15]+=suv.components[15];
(suv_rot) . components[16]+=cos(th)*suv.components[16] + sin(th)*(-(sin(del)*suv.components[20]) + cos(del)*suv.components[34]);
(suv_rot) . components[17]+=suv.components[17];
(suv_rot) . components[18]+=((11 + cos(2*th))*suv.components[18] - 2*sqrt(3)*sin(2*th)*(cos(del)*suv.components[4] + sin(del)*suv.components[32]) - sin(th)*sin(th)*(2*sqrt(3)*suv.components[9] + sqrt(2)*suv.components[27] + sqrt(30)*suv.components[36]))/12.;
(suv_rot) . components[19]+=suv.components[19];
(suv_rot) . components[20]+=cos(del)*sin(th)*suv.components[2] + sin(del)*sin(th)*suv.components[16] + cos(th)*suv.components[20];
(suv_rot) . components[21]+=suv.components[21];
(suv_rot) . components[22]+=suv.components[22];
(suv_rot) . components[23]+=suv.components[23];
(suv_rot) . components[24]+=cos(th)*suv.components[24] + sin(th)*(-(sin(del)*suv.components[28]) + cos(del)*suv.components[35]);
(suv_rot) . components[25]+=suv.components[25];
(suv_rot) . components[26]+=suv.components[26];
(suv_rot) . components[27]+=((23 + cos(2*th))*suv.components[27] - 2*sqrt(6)*sin(2*th)*(cos(del)*suv.components[4] + sin(del)*suv.components[32]) - 2*sin(th)*sin(th)*(sqrt(6)*suv.components[9] + sqrt(2)*suv.components[18] + sqrt(15)*suv.components[36]))/24.;
(suv_rot) . components[28]+=cos(del)*sin(th)*suv.components[3] + sin(del)*sin(th)*suv.components[24] + cos(th)*suv.components[28];
(suv_rot) . components[29]+=suv.components[29];
(suv_rot) . components[30]+=suv.components[30];
(suv_rot) . components[31]+=suv.components[31];
(suv_rot) . components[32]+=-2*cos(del)*sin(del)*sin(th)*sin(th)*suv.components[4] + (cos(th)*cos(th) + cos(2*del)*sin(th)*sin(th))*suv.components[32] + (cos(th)*sin(del)*sin(th)*(6*suv.components[9] + 2*sqrt(3)*suv.components[18] + sqrt(6)*suv.components[27] + 3*sqrt(10)*suv.components[36]))/6.;
(suv_rot) . components[33]+=sin(del)*sin(th)*suv.components[1] - cos(del)*sin(th)*suv.components[8] + cos(th)*suv.components[33];
(suv_rot) . components[34]+=sin(del)*sin(th)*suv.components[2] - cos(del)*sin(th)*suv.components[16] + cos(th)*suv.components[34];
(suv_rot) . components[35]+=sin(del)*sin(th)*suv.components[3] - cos(del)*sin(th)*suv.components[24] + cos(th)*suv.components[35];
(suv_rot) . components[36]+=(-2*sqrt(5)*sin(th)*sin(th)*(3*sqrt(2)*suv.components[9] + sqrt(6)*suv.components[18] + sqrt(3)*suv.components[27]) - 6*sqrt(10)*sin(2*th)*(cos(del)*suv.components[4] + sin(del)*suv.components[32]) + 3*(3 + 5*cos(2*th))*suv.components[36])/24.;
(suv_rot) . components[37]+=cos(del)*sin(th)*suv.components[5] + cos(th)*suv.components[37] + sin(del)*sin(th)*suv.components[40];
(suv_rot) . components[38]+=cos(del)*sin(th)*suv.components[6] + cos(th)*suv.components[38] + sin(del)*sin(th)*suv.components[48];
(suv_rot) . components[39]+=cos(del)*sin(th)*suv.components[7] + cos(th)*suv.components[39] + sin(del)*sin(th)*suv.components[56];
(suv_rot) . components[40]+=cos(th)*suv.components[40] - sin(th)*(sin(del)*suv.components[37] + cos(del)*suv.components[44]);
(suv_rot) . components[41]+=suv.components[41];
(suv_rot) . components[42]+=suv.components[42];
(suv_rot) . components[43]+=suv.components[43];
(suv_rot) . components[44]+=-(sin(del)*sin(th)*suv.components[5]) + cos(del)*sin(th)*suv.components[40] + cos(th)*suv.components[44];
(suv_rot) . components[45]+=suv.components[45];
(suv_rot) . components[46]+=suv.components[46];
(suv_rot) . components[47]+=suv.components[47];
(suv_rot) . components[48]+=cos(th)*suv.components[48] - sin(th)*(sin(del)*suv.components[38] + cos(del)*suv.components[52]);
(suv_rot) . components[49]+=suv.components[49];
(suv_rot) . components[50]+=suv.components[50];
(suv_rot) . components[51]+=suv.components[51];
(suv_rot) . components[52]+=-(sin(del)*sin(th)*suv.components[6]) + cos(del)*sin(th)*suv.components[48] + cos(th)*suv.components[52];
(suv_rot) . components[53]+=suv.components[53];
(suv_rot) . components[54]+=suv.components[54];
(suv_rot) . components[55]+=suv.components[55];
(suv_rot) . components[56]+=cos(th)*suv.components[56] - sin(th)*(sin(del)*suv.components[39] + cos(del)*suv.components[60]);
(suv_rot) . components[57]+=suv.components[57];
(suv_rot) . components[58]+=suv.components[58];
(suv_rot) . components[59]+=suv.components[59];
(suv_rot) . components[60]+=-(sin(del)*sin(th)*suv.components[7]) + cos(del)*sin(th)*suv.components[56] + cos(th)*suv.components[60];
(suv_rot) . components[61]+=suv.components[61];
(suv_rot) . components[62]+=suv.components[62];
(suv_rot) . components[63]+=suv.components[63];