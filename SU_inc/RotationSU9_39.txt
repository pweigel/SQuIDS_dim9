 /******************************************************************************
 *    This program is free software: you can redistribute it and/or modify     *
 *   it under the terms of the GNU General Public License as published by      *
 *   the Free Software Foundation, either version 3 of the License, or         *
 *   (at your option) any later version.                                       *
 *                                                                             *
 *   This program is distributed in the hope that it will be useful,           *
 *   but WITHOUT ANY WARRANTY; without even the implied warranty of            *
 *   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the             *
 *   GNU General Public License for more details.                              *
 *                                                                             *
 *   You should have received a copy of the GNU General Public License         *
 *   along with this program.  If not, see <http://www.gnu.org/licenses/>.     *
 *                                                                             *   
 *   Authors:                                                                  *
 *      Carlos Arguelles (University of Wisconsin Madison)                     * 
 *         carguelles@icecube.wisc.edu                                         *
 *      Jordi Salvado (University of Wisconsin Madison)                        *
 *         jsalvado@icecube.wisc.edu                                           *
 *      Christopher Weaver (University of Wisconsin Madison)                   * 
 *         cweaver@icecube.wisc.edu                                            *
 ******************************************************************************/
(suv_rot) . components[0]+=suv.components[0];
(suv_rot) . components[1]+=suv.components[1];
(suv_rot) . components[2]+=cos(th)*suv.components[2] - sin(th)*(cos(del)*suv.components[8] + sin(del)*suv.components[72]);
(suv_rot) . components[3]+=suv.components[3];
(suv_rot) . components[4]+=suv.components[4];
(suv_rot) . components[5]+=suv.components[5];
(suv_rot) . components[6]+=suv.components[6];
(suv_rot) . components[7]+=suv.components[7];
(suv_rot) . components[8]+=cos(del)*sin(th)*suv.components[2] + cos(th)*suv.components[8] - sin(del)*sin(th)*suv.components[18];
(suv_rot) . components[9]+=suv.components[9];
(suv_rot) . components[10]+=suv.components[10];
(suv_rot) . components[11]+=cos(th)*suv.components[11] - sin(th)*(cos(del)*suv.components[17] + sin(del)*suv.components[73]);
(suv_rot) . components[12]+=suv.components[12];
(suv_rot) . components[13]+=suv.components[13];
(suv_rot) . components[14]+=suv.components[14];
(suv_rot) . components[15]+=suv.components[15];
(suv_rot) . components[16]+=suv.components[16];
(suv_rot) . components[17]+=cos(del)*sin(th)*suv.components[11] + cos(th)*suv.components[17] - sin(del)*sin(th)*suv.components[19];
(suv_rot) . components[18]+=sin(del)*sin(th)*suv.components[8] + cos(th)*suv.components[18] - cos(del)*sin(th)*suv.components[72];
(suv_rot) . components[19]+=sin(del)*sin(th)*suv.components[17] + cos(th)*suv.components[19] - cos(del)*sin(th)*suv.components[73];
(suv_rot) . components[20]+=((2 + cos(2*th))*suv.components[20])/3. + (sin(2*th)*(cos(del)*suv.components[26] + sin(del)*suv.components[74]))/sqrt(3) + (sin(th)*sin(th)*(35*sqrt(2)*suv.components[30] + 7*sqrt(30)*suv.components[40] + 14*sqrt(5)*suv.components[50] + 10*sqrt(7)*suv.components[60] + 5*sqrt(21)*suv.components[70] + 105*sqrt(3)*suv.components[80]))/210.;
(suv_rot) . components[21]+=cos(th)*suv.components[21] - sin(th)*(cos(del)*suv.components[35] + sin(del)*suv.components[75]);
(suv_rot) . components[22]+=cos(th)*suv.components[22] - sin(th)*(cos(del)*suv.components[44] + sin(del)*suv.components[76]);
(suv_rot) . components[23]+=cos(th)*suv.components[23] - sin(th)*(cos(del)*suv.components[53] + sin(del)*suv.components[77]);
(suv_rot) . components[24]+=cos(th)*suv.components[24] - sin(th)*(cos(del)*suv.components[62] + sin(del)*suv.components[78]);
(suv_rot) . components[25]+=cos(th)*suv.components[25] - sin(th)*(cos(del)*suv.components[71] + sin(del)*suv.components[79]);
(suv_rot) . components[26]+=(cos(del)*cos(del)*cos(2*th) + sin(del)*sin(del))*suv.components[26] - sin(2*del)*sin(th)*sin(th)*suv.components[74] + (cos(del)*sin(2*th)*(-140*sqrt(3)*suv.components[20] + 35*sqrt(6)*suv.components[30] + 21*sqrt(10)*suv.components[40] + 14*sqrt(15)*suv.components[50] + 10*sqrt(21)*suv.components[60] + 15*sqrt(7)*suv.components[70] + 315*suv.components[80]))/420.;
(suv_rot) . components[27]+=suv.components[27];
(suv_rot) . components[28]+=suv.components[28];
(suv_rot) . components[29]+=cos(th)*suv.components[29] + sin(th)*(-(sin(del)*suv.components[35]) + cos(del)*suv.components[75]);
(suv_rot) . components[30]+=(35*(23 + cos(2*th))*suv.components[30] - 70*sqrt(6)*sin(2*th)*(cos(del)*suv.components[26] + sin(del)*suv.components[74]) + sin(th)*sin(th)*(140*sqrt(2)*suv.components[20] - 14*sqrt(15)*suv.components[40] - 14*sqrt(10)*suv.components[50] - 5*(2*sqrt(14)*suv.components[60] + sqrt(42)*suv.components[70] + 21*sqrt(6)*suv.components[80])))/840.;
(suv_rot) . components[31]+=suv.components[31];
(suv_rot) . components[32]+=suv.components[32];
(suv_rot) . components[33]+=suv.components[33];
(suv_rot) . components[34]+=suv.components[34];
(suv_rot) . components[35]+=cos(del)*sin(th)*suv.components[21] + sin(del)*sin(th)*suv.components[29] + cos(th)*suv.components[35];
(suv_rot) . components[36]+=suv.components[36];
(suv_rot) . components[37]+=suv.components[37];
(suv_rot) . components[38]+=cos(th)*suv.components[38] + sin(th)*(-(sin(del)*suv.components[44]) + cos(del)*suv.components[76]);
(suv_rot) . components[39]+=suv.components[39];
(suv_rot) . components[40]+=(21*(39 + cos(2*th))*suv.components[40] - 42*sqrt(10)*sin(2*th)*(cos(del)*suv.components[26] + sin(del)*suv.components[74]) + sin(th)*sin(th)*(28*sqrt(30)*suv.components[20] - 14*sqrt(15)*suv.components[30] - 14*sqrt(6)*suv.components[50] - sqrt(10)*(2*sqrt(21)*suv.components[60] + 3*sqrt(7)*suv.components[70] + 63*suv.components[80])))/840.;
(suv_rot) . components[41]+=suv.components[41];
(suv_rot) . components[42]+=suv.components[42];
(suv_rot) . components[43]+=suv.components[43];
(suv_rot) . components[44]+=cos(del)*sin(th)*suv.components[22] + sin(del)*sin(th)*suv.components[38] + cos(th)*suv.components[44];
(suv_rot) . components[45]+=suv.components[45];
(suv_rot) . components[46]+=suv.components[46];
(suv_rot) . components[47]+=cos(th)*suv.components[47] + sin(th)*(-(sin(del)*suv.components[53]) + cos(del)*suv.components[77]);
(suv_rot) . components[48]+=suv.components[48];
(suv_rot) . components[49]+=suv.components[49];
(suv_rot) . components[50]+=(7*(59 + cos(2*th))*suv.components[50] - 14*sqrt(15)*sin(2*th)*(cos(del)*suv.components[26] + sin(del)*suv.components[74]) + sin(th)*sin(th)*(28*sqrt(5)*suv.components[20] - 7*sqrt(10)*suv.components[30] - 7*sqrt(6)*suv.components[40] - 2*sqrt(35)*suv.components[60] - sqrt(15)*(sqrt(7)*suv.components[70] + 21*suv.components[80])))/420.;
(suv_rot) . components[51]+=suv.components[51];
(suv_rot) . components[52]+=suv.components[52];
(suv_rot) . components[53]+=cos(del)*sin(th)*suv.components[23] + sin(del)*sin(th)*suv.components[47] + cos(th)*suv.components[53];
(suv_rot) . components[54]+=suv.components[54];
(suv_rot) . components[55]+=suv.components[55];
(suv_rot) . components[56]+=cos(th)*suv.components[56] + sin(th)*(-(sin(del)*suv.components[62]) + cos(del)*suv.components[78]);
(suv_rot) . components[57]+=suv.components[57];
(suv_rot) . components[58]+=suv.components[58];
(suv_rot) . components[59]+=suv.components[59];
(suv_rot) . components[60]+=(5*(83 + cos(2*th))*suv.components[60] - 10*sqrt(21)*sin(2*th)*(cos(del)*suv.components[26] + sin(del)*suv.components[74]) + sin(th)*sin(th)*(20*sqrt(7)*suv.components[20] - 5*sqrt(14)*suv.components[30] - sqrt(210)*suv.components[40] - 2*sqrt(35)*suv.components[50] - 5*sqrt(3)*(suv.components[70] + 3*sqrt(7)*suv.components[80])))/420.;
(suv_rot) . components[61]+=suv.components[61];
(suv_rot) . components[62]+=cos(del)*sin(th)*suv.components[24] + sin(del)*sin(th)*suv.components[56] + cos(th)*suv.components[62];
(suv_rot) . components[63]+=suv.components[63];
(suv_rot) . components[64]+=suv.components[64];
(suv_rot) . components[65]+=cos(th)*suv.components[65] + sin(th)*(-(sin(del)*suv.components[71]) + cos(del)*suv.components[79]);
(suv_rot) . components[66]+=suv.components[66];
(suv_rot) . components[67]+=suv.components[67];
(suv_rot) . components[68]+=suv.components[68];
(suv_rot) . components[69]+=suv.components[69];
(suv_rot) . components[70]+=(40*sqrt(21)*sin(th)*sin(th)*suv.components[20] + 15*(111 + cos(2*th))*suv.components[70] - 60*sqrt(7)*sin(2*th)*(cos(del)*suv.components[26] + sin(del)*suv.components[74]) - 2*sin(th)*sin(th)*(5*sqrt(42)*suv.components[30] + 3*sqrt(70)*suv.components[40] + 2*sqrt(105)*suv.components[50] + 10*sqrt(3)*suv.components[60] + 45*sqrt(7)*suv.components[80]))/1680.;
(suv_rot) . components[71]+=cos(del)*sin(th)*suv.components[25] + sin(del)*sin(th)*suv.components[65] + cos(th)*suv.components[71];
(suv_rot) . components[72]+=sin(del)*sin(th)*suv.components[2] + cos(del)*sin(th)*suv.components[18] + cos(th)*suv.components[72];
(suv_rot) . components[73]+=sin(del)*sin(th)*suv.components[11] + cos(del)*sin(th)*suv.components[19] + cos(th)*suv.components[73];
(suv_rot) . components[74]+=-((sin(del)*sin(2*th)*suv.components[20])/sqrt(3)) - 2*cos(del)*sin(del)*sin(th)*sin(th)*suv.components[26] + (cos(del)*cos(del) + cos(2*th)*sin(del)*sin(del))*suv.components[74] + (sin(del)*sin(2*th)*(35*sqrt(6)*suv.components[30] + 21*sqrt(10)*suv.components[40] + 14*sqrt(15)*suv.components[50] + 10*sqrt(21)*suv.components[60] + 15*sqrt(7)*suv.components[70] + 315*suv.components[80]))/420.;
(suv_rot) . components[75]+=sin(del)*sin(th)*suv.components[21] - cos(del)*sin(th)*suv.components[29] + cos(th)*suv.components[75];
(suv_rot) . components[76]+=sin(del)*sin(th)*suv.components[22] - cos(del)*sin(th)*suv.components[38] + cos(th)*suv.components[76];
(suv_rot) . components[77]+=sin(del)*sin(th)*suv.components[23] - cos(del)*sin(th)*suv.components[47] + cos(th)*suv.components[77];
(suv_rot) . components[78]+=sin(del)*sin(th)*suv.components[24] - cos(del)*sin(th)*suv.components[56] + cos(th)*suv.components[78];
(suv_rot) . components[79]+=sin(del)*sin(th)*suv.components[25] - cos(del)*sin(th)*suv.components[65] + cos(th)*suv.components[79];
(suv_rot) . components[80]+=(2*sin(th)*sin(th)*(140*sqrt(3)*suv.components[20] - 35*sqrt(6)*suv.components[30] - 21*sqrt(10)*suv.components[40] - 14*sqrt(15)*suv.components[50] - 5*sqrt(7)*(2*sqrt(3)*suv.components[60] + 3*suv.components[70])) - 420*sin(2*th)*(cos(del)*suv.components[26] + sin(del)*suv.components[74]) + 35*(7 + 9*cos(2*th))*suv.components[80])/560.;